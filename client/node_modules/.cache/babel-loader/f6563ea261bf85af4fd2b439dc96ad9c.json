{"ast":null,"code":"var _jsxFileName = \"/Users/maximfedotov/Documents/react/airport-keep/src/pages/PostsPage/Postspage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchPosts } from '../../store/asyncGetPosts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Postspage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u0432\\u0441\\u0435\\u0445 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.length ? posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n        to: post.id,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [post.id, \" \", post.reason]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 8\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439 \\u043D\\u0435\\u0442\\u0443!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Postspage, \"ENUDqdKwIx40U6eZCutSSehqnb4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Postspage;\nexport default Postspage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Postspage\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","Link","fetchPosts","Postspage","dispatch","posts","state","length","map","post","id","reason"],"sources":["/Users/maximfedotov/Documents/react/airport-keep/src/pages/PostsPage/Postspage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchPosts } from '../../store/asyncGetPosts';\nconst Postspage = () => {\n\tconst dispatch = useDispatch();\n\tconst posts = useSelector((state) => state.posts);\n\tuseEffect(() => {\n\t\tdispatch(fetchPosts());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Страница всех записей</h1>\n\t\t\t<ul>\n\t\t\t\t{posts.length ? (\n\t\t\t\t\tposts.map((post) => (\n\t\t\t\t\t\t<Link to={post.id} key={post.id}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{post.id} {post.reason}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t<h1>Записей нету!!!</h1>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default Postspage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,2BAA3B;;;;AACA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACvB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAMK,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;EACAP,SAAS,CAAC,MAAM;IACfM,QAAQ,CAACF,UAAU,EAAX,CAAR;EACA,CAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;EAIA,oBACC;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAA,UACEC,KAAK,CAACE,MAAN,GACAF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;QAAM,EAAE,EAAEA,IAAI,CAACC,EAAf;QAAA,uBACC;UAAA,WACED,IAAI,CAACC,EADP,OACYD,IAAI,CAACE,MADjB;QAAA;UAAA;UAAA;UAAA;QAAA;MADD,GAAwBF,IAAI,CAACC,EAA7B;QAAA;QAAA;QAAA;MAAA,QADD,CADA,gBASA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAVF;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA,gBADD;AAkBA,CAzBD;;GAAMP,S;UACYH,W,EACHD,W;;;KAFTI,S;AA2BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}